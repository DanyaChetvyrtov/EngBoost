CREATE TABLE IF NOT EXISTS word_card
(
    id         INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    word       VARCHAR(50)  NOT NULL,
    definition VARCHAR(250) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS stems
(
    id           INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    word_card_id INTEGER REFERENCES word_card (id) ON DELETE CASCADE,
    word         VARCHAR(100) NOT NULL
);

CREATE TABLE IF NOT EXISTS examples
(
    id           INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    word_card_id INTEGER REFERENCES word_card (id) ON DELETE CASCADE,
    example      TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS short_definitions
(
    id           INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    word_card_id INTEGER REFERENCES word_card (id) ON DELETE CASCADE,
    definition   TEXT NOT NULL
);

CREATE TABLE word_types
(
    id           INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    word_card_id INTEGER     NOT NULL REFERENCES word_card (id) ON DELETE CASCADE,
    type_name    VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS achievements
(
    id         INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title      VARCHAR(100) NOT NULL,
    progress   INTEGER      NOT NULL DEFAULT 0,
    created_at TIMESTAMP             DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP             DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS users
(
    id         INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name VARCHAR(100) NOT NULL,
    last_name  VARCHAR(100) NOT NULL,
    username   VARCHAR(150) NOT NULL UNIQUE,
    age        INTEGER      NOT NULL CHECK ( age > 6 ),
    email      VARCHAR(250) NOT NULL UNIQUE CHECK ( email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$' ),
    password   VARCHAR(150) NOT NULL CHECK ( LENGTH(password) > 8 ),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS user_statistic
(
    user_id            INTEGER PRIMARY KEY REFERENCES users (id) ON DELETE CASCADE,
    learning_time      BIGINT  NOT NULL,
    total_cards_amount INTEGER NOT NULL DEFAULT 0 check ( total_cards_amount >= 0 )
);

CREATE TABLE users_word_card
(
    user_id INTEGER NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    card_id INTEGER NOT NULL REFERENCES word_card (id) ON DELETE CASCADE,
    PRIMARY KEY (user_id, card_id)
);

CREATE TABLE users_achievements
(
    user_id        INTEGER NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    achievement_id INTEGER NOT NULL REFERENCES achievements (id) ON DELETE CASCADE,
    PRIMARY KEY (user_id, achievement_id)
);